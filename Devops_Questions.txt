DevOps Questions:
Can you describe your workflow when you create a script?
What is GIT?
What is a dynamically/statically linked file?
What does "./configure && make && make install" do?
What is puppet/chef/ansible used for?
What is Nagios/Zenoss/NewRelic used for?
What is Jenkins/TeamCity/GoCI used for?
What is the difference between Containers and VMs?
How do you create a new postgres user?
What is a virtual IP address? What is a cluster?
How do you print all strings of printable characters present in a file?
How do you find shared library dependencies?
What is Automake and Autoconf?
./configure shows an error that libfoobar is missing on your system, how could you fix this, what could be wrong?
What are the advantages/disadvantages of script vs compiled program?
What's the relationship between continuous delivery and DevOps?
What are the important aspects of a system of continuous integration and deployment?
How would you enable network file sharing within AWS that would allow EC2 instances in multiple availability zones to share data?


[?] Fun Questions:
A careless sysadmin executes the following command: chmod 444 /bin/chmod - what do you do to fix this?
I've lost my root password, what can I do?
I've rebooted a remote server but after 10 minutes I'm still not able to ssh into it, what can be wrong?
If you were stuck on a desert island with only 5 command-line utilities, which would you choose?
You come across a random computer and it appears to be a command console for the universe. What is the first thing you type?
Tell me about a creative way that you've used SSH?
You have deleted by error a running script, what could you do to restore it?
What will happen on 19 January 2038?
How to reboot server when reboot command is not responding?
~~~~~~~~~~~~~~~~~~~~~~~~


What DevOps is?
CALMS
C – Culture (promotes collaborative and open culture between Dev and Ops)
A – Automation (automate wherever applicable)
L- Learning (continuous learning & experimentation)
M – Measure (Measure with shared metrics across the Dev and ops for better management)
S – Sharing (Shared delivery process across Dev and Ops to build , deploy, maintain and monitor product with mentality of One Team – One Goal


What are the success factors for Continuous Integration?
Examples of answers:
		Maintain a code repository
		Automate the build
		Make the build self-testing
		Everyone commits to the baseline every day
		Every commit (to baseline) should be built
		Keep the build fast
		Test in a clone of the production environment
		Make it easy to get the latest deliverables
		Everyone can see the results of the latest build
		Automate deployment


What is the purpose of a post-mortem meeting?
What is meant by Continuous Integration?
What are the success factors for Continuous Integration?
Examples of answers:
		Maintain a code repository
		Automate the build
		Make the build self-testing
		Everyone commits to the baseline every day
		Every commit (to baseline) should be built
		Keep the build fast
		Test in a clone of the production environment
		Make it easy to get the latest deliverables
		Everyone can see the results of the latest build
		Automate deployment

How would you implement CI (continuous delivery) - end to end, including source control, branches, tools, etc. ?
What is Continious Delivery? Continious Deployment?
What is the difference between Continuous Integration, Continious Delivery and Continious Deployment?
What’s the difference between git and github ? What about git and SVN ?
What is git rebase?
In Git how do you revert a commit that has already been pushed and made public?
What is puppet/chef/ansible used for? What are the advantages over shell scripts ?
What do you understand by “Infrastructure as code”? How does it fit into the DevOps methodology? What purpose does it achieve?
How do you give your developers access to the production logs ?
Tell me about the worst-run/best-run outage you’ve been a part of. What made it bad/well-run?
How do you monitor your application ? How do you make sure it is working ? How do you get alerts when it stops working ?
What would be the availability and performance metrics for a key value store ? What about for MySQL replication ?
How would you deploy software to 5000 systems?
What is caching ? Where should a large scale application cache, and what data should be cached ?: